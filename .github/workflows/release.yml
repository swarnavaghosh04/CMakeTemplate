name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  ubuntu-test:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Download Dependencies
      run: |
        pacman -Syyuu
        apt install cmake rpm-tools
    - name: Build
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build .
    - name: Create Packages
      working-directory: ${{github.workspace}}/build
      run: |
        cpack -G DEB
        cpack -G RPM
        cpack -G TGZ
        makepkg
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
    - name: Upload Release Asset - Debian
      id: upload-release-asset-debian
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/*.deb
    - name: Upload Release Asset - RPM
      id: upload-release-asset-rpm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/*.rpm
    - name: Upload Release Asset - ArchLinux
      id: upload-release-asset-archlinux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/*.pkg.tar.zst
